"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _union2 = _interopRequireDefault(require("lodash/union"));

var _throttle2 = _interopRequireDefault(require("lodash/throttle"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _operators = require("rxjs/operators");

var _document = _interopRequireDefault(require("part:@sanity/base/datastore/document"));

var _reactFastCompare = _interopRequireDefault(require("react-fast-compare"));

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function deprecatedCheck(props, propName, componentName) {
  var _PropTypes$func;

  if (_react.default.isValidElement(props[propName])) {
    return new Error("Passing a React element as ".concat(propName, " to ").concat(componentName, " is deprecated. Use a function instead."));
  }

  for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    rest[_key - 3] = arguments[_key];
  }

  return (_PropTypes$func = _propTypes.default.func).isRequired.apply(_PropTypes$func, [props, propName, componentName].concat(rest));
}

function createInitialState() {
  return {
    result: null,
    complete: false,
    loading: true,
    error: false
  };
}

function keysEqual(object, otherObject) {
  var excludeKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var objectKeys = Object.keys(object).filter(function (key) {
    return !excludeKeys.includes(key);
  });
  var otherObjectKeys = Object.keys(otherObject).filter(function (key) {
    return !excludeKeys.includes(key);
  });

  if (objectKeys.length !== otherObjectKeys.length) {
    return false;
  }

  return (0, _union2.default)(objectKeys, otherObjectKeys).every(function (key) {
    return object[key] === otherObject[key];
  });
}

var RESPOND_TO_TRANSITIONS = ['appear', 'disappear', 'update' // todo: remove this
];

var QueryContainer =
/*#__PURE__*/
function (_React$Component) {
  _inherits(QueryContainer, _React$Component);

  function QueryContainer() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, QueryContainer);

    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QueryContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", createInitialState());

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "next", function (event) {
      switch (event.type) {
        case 'snapshot':
          {
            _this.setState({
              error: false,
              loading: false,
              result: {
                documents: event.documents
              }
            });

            break;
          }

        case 'mutation':
          {
            _this.receiveMutations(event);

            break;
          }

        default:
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "error", function (error) {
      // @todo make sure some kind of error dialog is shown, somewhere
      console.error(error); // eslint-disable-line no-console

      _this.setState({
        error: error,
        loading: false
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "complete", function () {
      _this.setState({
        complete: true,
        loading: false
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "refresh", (0, _throttle2.default)(function () {
      _this.subscribe(_this.props.query, _this.props.params);
    }, 1000, {
      leading: true,
      trailing: true
    }));

    return _this;
  }

  _createClass(QueryContainer, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      this.subscribe(this.props.query, this.props.params);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.unsubscribe();
    }
  }, {
    key: "subscribe",
    value: function subscribe(query, params) {
      this.unsubscribe();
      this._subscription = _document.default.query(query, params).pipe((0, _operators.filter)(function (event) {
        return event.type === 'snapshot' || RESPOND_TO_TRANSITIONS.includes(event.transition);
      })).subscribe(this);
    }
  }, {
    key: "receiveMutations",
    value: function receiveMutations(event) {
      // todo: apply mutations on this.state.collection
      // just resubcribing for now.

      /*
      const exampleEvent = {
        type: 'mutation',
        eventId: 'yr50wh-mzc-lby-hcf-3zumkc867#public/hi3HUGlrHu2c292ZddrZes',
        documentId: 'public/hi3HUGlrHu2c292ZddrZes',
        transactionId: 'yr50wh-mzc-lby-hcf-3zumkc867',
        transition: 'disappear',
        identity: 'Z29vZ2xlX29hdXRoMjo6MTA2MTc2MDY5MDI1MDA3MzA5MTAwOjozMjM=',
        mutations: [
          {
            delete: {
              id: 'public/hi3HUGlrHu2c292ZddrZes'
            }
          }
        ],
        previousRev: 'm5qsec-ovr-cv8-i1q-qck9otism',
        resultRev: 'yr50wh-mzc-lby-hcf-3zumkc867',
        timestamp: '2016-12-22T12:24:02.433897Z'
      }
       */
      var result = this.state.result;
      var hasCreateOrDelete = event.type === 'mutation' && event.mutations.some(function (mut) {
        return mut.create || mut.delete && (result.documents || []).some(function (doc) {
          return doc._id === mut.delete.id;
        });
      });

      if (hasCreateOrDelete) {
        this.refresh();
        this.refresh(); // invoke on both ends to make sure we get the refreshed result
      }
    }
  }, {
    key: "unsubscribe",
    value: function unsubscribe() {
      if (this._subscription) {
        this._subscription.unsubscribe();
      }
    }
  }, {
    key: "componentWillUpdate",
    value: function componentWillUpdate(nextProps) {
      var sameQuery = nextProps.query === this.props.query;
      var sameParams = (0, _reactFastCompare.default)(nextProps.params, this.props.params);

      if (!sameQuery || !sameParams) {
        this.setState(createInitialState());
        this.subscribe(nextProps.query, nextProps.params);
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (!(0, _shallowEquals.default)(this.state, nextState)) {
        return true;
      }

      if (nextProps.query !== this.props.query) {
        return true;
      }

      if (!(0, _reactFastCompare.default)(nextProps.params, this.props.params)) {
        return true;
      }

      return !keysEqual(nextProps, this.props, ['mapFn', 'query', 'params']);
    }
  }, {
    key: "renderDeprecated",
    value: function renderDeprecated() {
      return _react.default.cloneElement(_react.default.Children.only(this.props.children), this.props.mapFn(this.state));
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          children = _this$props.children,
          mapFn = _this$props.mapFn,
          rest = _objectWithoutProperties(_this$props, ["children", "mapFn"]);

      if (_react.default.isValidElement(children)) {
        return this.renderDeprecated();
      }

      if (!children || typeof children !== 'function') {
        return _react.default.createElement("div", null, "Invalid usage of QueryContainer. Expected a function as its only child");
      }

      return children(_objectSpread({}, rest, {
        onRetry: this.refresh
      }, mapFn(this.state)));
    }
  }]);

  return QueryContainer;
}(_react.default.Component);

exports.default = QueryContainer;

_defineProperty(QueryContainer, "propTypes", {
  query: _propTypes.default.string,
  params: _propTypes.default.object,
  mapFn: _propTypes.default.func,
  children: deprecatedCheck
});

_defineProperty(QueryContainer, "defaultProps", {
  mapFn: function mapFn(props) {
    return props;
  }
});